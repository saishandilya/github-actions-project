name: CI CD for Bank Project Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: self-hosted
    steps:
    - name: Checkout Project Code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn compile

  security_check:
    runs-on: self-hosted
    needs: compile
    steps:
    - name: Checkout Project Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Trivy File System Scan
      uses: aquasecurity/trivy-action@0.32.0
      with:
        scan-type: fs
        scan-ref: .
        format: table
        output: fs-report.json
        severity: HIGH,CRITICAL
        exit-code: 0

    - name: Install Gitleaks
      run: |
        curl -sSL -o gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v8.27.2/gitleaks_8.27.2_linux_x64.tar.gz
        tar -xzf gitleaks.tar.gz
        sudo mv gitleaks /usr/local/bin/

    
    - name: Scan for Secrets with Gitleaks
      run: |
        gitleaks detect --source . --report-format json --report-path gitleaks-report.json --redact
    
    # - name: Gitleaks Installation
    #   run: sudo apt install gitleaks -y

    # - name: Scan for Secrets with Gitleaks
    #   run: gitleaks detect source . -r gitleaks-report.json -f json

    # - name: Scan for Secrets with Gitleaks
    #   uses: gitleaks/gitleaks-action@v2
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test_build_project_and_upload_artifact:
    runs-on: self-hosted
    needs: security_check
    steps:
      - name: Checkout Project Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Maven unit test cases
        run: mvn test

      - name: Build Artifact
        run: mvn clean package
      
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
  
  sonarqube_scan_and_quality_gates:
    runs-on: self-hosted
    needs: test_build_project_and_upload_artifact
    steps:
      - name: Checkout Project Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: SonarQube Scanning
        uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
